apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}--frontend
  labels:
    {{- include "prc.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
spec:
  selector:
    matchLabels:
      {{- include "prc.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: frontend
  template:
    metadata:
      labels:
        {{- include "prc.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: frontend
    spec:
      containers:
        - name: app
          image: "{{ .Values.images.frontend.repository }}:{{ .Values.images.frontend.tag }}"
          env:
            - name: APP_ORIGIN
              value: http://{{ .Values.hostname }}
            - name: DISQUS_API_KEY
              value: {{ .Values.disqusApiKey }}
            - name: GOOGLE_TAG_MANAGER_ID
              value: {{ .Values.googleTagManagerId }}
          {{- if .Values.postgresql.secretName }}
            - name: PGDATABASE
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.postgresql.secretName }}"
                  key: postgresql-database
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.postgresql.secretName }}"
                  key: postgresql-username
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.postgresql.secretName }}"
                  key: postgresql-password
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.postgresql.secretName }}"
                  key: postgresql-host
            - name: PGPORT
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.postgresql.secretName }}"
                  key: postgresql-port
          {{- else }}
            - name: PGHOST
              value: {{ .Release.Name }}-postgresql
            - name: PGDATABASE
              value: {{ .Values.postgresql.postgresqlDatabase }}
            - name: PGUSER
              value: {{ .Values.postgresql.postgresqlUsername }}
            - name: PGPASSWORD
              value: {{ .Values.postgresql.postgresqlPassword }}
          {{- end }}
            - name: TWITTER_API_KEY
              value: {{ .Values.twitterApiKey }}
            - name: TWITTER_API_SECRET_KEY
              value: {{ .Values.twitterApiSecretKey }}
            - name: TWITTER_API_BEARER_TOKEN
              value: {{ .Values.twitterApiBearerToken }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /ping
              port: http
